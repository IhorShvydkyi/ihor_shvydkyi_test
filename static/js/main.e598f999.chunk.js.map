{"version":3,"sources":["images/hand.svg","components/Answers/Answers.jsx","components/Rounds/Rounds.jsx","pages/FinishPage/FinishPage.jsx","pages/MainPage/MainPage.jsx","pages/StartPage/StartPage.jsx","App.js","index.js"],"names":["Answers","answer","letter","currentAnswer","onSelect","disableButtons","useState","status","setStatus","delay","ms","Promise","resolve","setTimeout","a","includes","useEffect","className","onClick","width","height","viewBox","fill","xmlns","d","stroke","Rounds","round","indexRound","currentIndex","FinishPage","score","start","setStart","alt","src","handPicture","MainPage","setCurrentIndex","question","setQuestion","end","setEnd","disabledBtns","setDisabledBtns","mobileMenu","setMobileMenu","roundIndex","setRoundIndex","data","setRound","countAnswered","setCountAnswered","totalQuest","setTotalQuest","questionsArray","useMemo","i","length","j","Math","floor","random","shuffle","questions","currentQuestion","currentAnswers","answers","rightAnswer","alphabet","Array","apply","undefined","map","x","y","String","fromCharCode","join","checkAnswer","splice","id","StartPage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e598f999.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hand.dbb74bc4.svg\";","import { useState, useEffect } from 'react';\nimport './Answers.css';\n\nfunction Answers({ answer, letter, currentAnswer, onSelect, disableButtons }) {\n  const [status, setStatus] = useState('');\n\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  useEffect(() => {\n    setStatus('');\n  }, [currentAnswer]);\n\n  async function handleClick() {\n    disableButtons();\n    setStatus('selected');\n    await delay(700);\n    if (currentAnswer.includes(answer)) {\n      setStatus('correct');\n    } else {\n      setStatus('wrong');\n    }\n    await delay(1000);\n    onSelect(answer);\n  }\n\n  return (\n    <div className={`answerDisabled ${status}`}>\n      <div className={`answerWrap ${status}`} onClick={handleClick}>\n        <p className=\"answerContent\">\n          <span className=\"answerLetter\">{letter}</span>\n          {answer}\n        </p>\n        <div className={`answerLine ${status}`}></div>\n        <div className=\"svgWrap\">\n          <svg\n            width=\"373\"\n            height=\"72\"\n            viewBox=\"0 0 373 72\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M22.7172 5.28344C24.8781 2.28016 28.3521 0.5 32.052 0.5H340.948C344.648 0.5 348.122 2.28016 350.283 5.28344L372.384 36L350.283 66.7166C348.122 69.7198 344.648 71.5 340.948 71.5H32.052C28.3521 71.5 24.8781 69.7198 22.7172 66.7166L0.615976 36L22.7172 5.28344Z\"\n              fill=\"white\"\n              stroke=\"#D0D0D8\"\n            />\n          </svg>\n          <svg\n            width=\"288\"\n            height=\"56\"\n            viewBox=\"0 0 288 56\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M16.8175 5.31576C18.9762 2.29361 22.4615 0.5 26.1754 0.5H261.825C265.539 0.5 269.024 2.29361 271.183 5.31576L287.386 28L271.183 50.6842C269.024 53.7064 265.539 55.5 261.825 55.5H26.1754C22.4615 55.5 18.9762 53.7064 16.8175 50.6842L0.614452 28L16.8175 5.31576Z\"\n              fill=\"white\"\n              stroke=\"#D0D0D8\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Answers;\n","import React, { useState, useEffect } from 'react';\nimport './Rounds.css';\n\nfunction Rounds({ round, indexRound, currentIndex }) {\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    if (indexRound === 0) {\n      setStatus('current');\n    } else if (currentIndex === indexRound) {\n      setStatus('current ');\n    }\n    if (currentIndex > indexRound) {\n      setStatus('riched');\n    }\n  }, [currentIndex, indexRound]);\n\n  return (\n    <div className={`roundsBlock ${status}`}>\n      <p className=\"roundsContent\">${round}</p>\n      <div className=\"roundsLine\"></div>\n      <div className=\"roundsSvgWarp\">\n        <svg\n          width=\"240\"\n          height=\"40\"\n          viewBox=\"0 0 240 40\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M13.4526 4.63788C15.6376 2.01596 18.8742 0.5 22.2872 0.5H217.713C221.126 0.5 224.362 2.01597 226.547 4.63788L239.349 20L226.547 35.3621C224.362 37.984 221.126 39.5 217.713 39.5H22.2872C18.8742 39.5 15.6376 37.984 13.4526 35.3621L0.650853 20L13.4526 4.63788Z\"\n            fill=\"white\"\n            stroke=\"#D0D0D8\"\n          />\n        </svg>\n        <svg\n          width=\"240\"\n          height=\"32\"\n          viewBox=\"0 0 240 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M13.5303 3.70404C15.6719 1.64809 18.5256 0.5 21.4944 0.5H218.506C221.474 0.5 224.328 1.64809 226.47 3.70404L239.278 16L226.47 28.296C224.328 30.3519 221.474 31.5 218.506 31.5H21.4944C18.5256 31.5 15.6719 30.3519 13.5303 28.296L0.721988 16L13.5303 3.70404Z\"\n            fill=\"white\"\n            stroke=\"#D0D0D8\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n}\nexport default Rounds;\n","import { useState } from 'react';\nimport handPicture from '../../images/hand.svg';\nimport MainPage from 'pages/MainPage/MainPage';\nimport './FinishPage.css';\n\nfunction FinishPage({ score }) {\n  const [start, setStart] = useState(false);\n\n  if (start === false) {\n    return (\n      <div className=\"finishGameWrapper\">\n        <img alt=\"hand up\" className=\"finishGameImg\" src={handPicture} />\n        <div className=\"finishGameLogic\">\n          <p className=\"finishGameTotal\">Total score:</p>\n          <h1 className=\"finishGameScore\">${score ? score : '0'}</h1>\n          <div onClick={() => setStart(true)} className=\"finishGameButton\">\n            Try again\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <MainPage />;\n}\nexport default FinishPage;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport './MainPage.css';\nimport Answers from '../../components/Answers/Answers';\nimport Rounds from 'components/Rounds/Rounds';\nimport data from '../../data';\nimport FinishPage from 'pages/FinishPage/FinishPage';\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction MainPage() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [question, setQuestion] = useState(currentIndex);\n  const [end, setEnd] = useState(false);\n  const [disabledBtns, setDisabledBtns] = useState('');\n  const [mobileMenu, setMobileMenu] = useState('');\n  const [roundIndex, setRoundIndex] = useState(0);\n  const [round, setRound] = useState(data.round);\n  const [countAnswered, setCountAnswered] = useState(1);\n  const [totalQuest, setTotalQuest] = useState(0);\n\n  const questionsArray = useMemo(() => {\n    return shuffle(data.questions);\n  }, []);\n\n  const currentQuestion = questionsArray[question];\n  const currentAnswers = currentQuestion.answers;\n  const currentAnswer = currentQuestion.rightAnswer;\n\n  const alphabet = Array.apply(undefined, Array(26))\n    .map(function (x, y) {\n      return String.fromCharCode(y + 65);\n    })\n    .join('');\n\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  useEffect(() => {\n    if (questionsArray.length > round.length) {\n      setTotalQuest(round.length);\n    } else {\n      setTotalQuest(questionsArray.length);\n      setRound(round.splice(0, questionsArray.length));\n    }\n  }, []);\n\n  useEffect(() => {\n    setQuestion(currentIndex);\n    setCountAnswered(1);\n  }, [currentIndex]);\n\n  function nextQuestion() {\n    if (currentIndex < totalQuest - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      setEnd(true);\n    }\n  }\n\n  function checkAnswer(answer) {\n    if (currentQuestion.rightAnswer.includes(answer)) {\n      if (currentAnswer.length === countAnswered) {\n        setRoundIndex(roundIndex + 1);\n        nextQuestion();\n      } else {\n        setCountAnswered(countAnswered + 1);\n      }\n    } else {\n      setEnd(true);\n    }\n  }\n  async function disableButtons() {\n    setDisabledBtns('disabled');\n    await delay(1700);\n    setDisabledBtns('');\n  }\n\n  function openMenu() {\n    if (mobileMenu === '' || mobileMenu === 'close') {\n      setMobileMenu('open');\n    }\n\n    if (mobileMenu === 'open') {\n      setMobileMenu('close');\n    }\n  }\n  if (end === false) {\n    return (\n      <div className=\"mainGameWrapper\">\n        <div className={`menu ${mobileMenu}`} onClick={openMenu}>\n          <svg\n            width=\"16\"\n            height=\"14\"\n            viewBox=\"0 0 16 14\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M0 1C0 0.447715 0.447715 0 1 0H15C15.5523 0 16 0.447715 16 1C16 1.55228 15.5523 2 15 2H1C0.447715 2 0 1.55228 0 1Z\"\n              fill=\"#1C1C21\"\n            />\n            <path\n              d=\"M0 7C0 6.44772 0.447715 6 1 6H15C15.5523 6 16 6.44772 16 7C16 7.55228 15.5523 8 15 8H1C0.447715 8 0 7.55228 0 7Z\"\n              fill=\"#1C1C21\"\n            />\n            <path\n              d=\"M1 12C0.447715 12 0 12.4477 0 13C0 13.5523 0.447715 14 1 14H15C15.5523 14 16 13.5523 16 13C16 12.4477 15.5523 12 15 12H1Z\"\n              fill=\"#1C1C21\"\n            />\n          </svg>\n          <svg\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 14 14\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M13.364 2.05025C13.7545 1.65972 13.7545 1.02656 13.364 0.636033C12.9734 0.245508 12.3403 0.245509 11.9497 0.636033L6.99999 5.58579L2.05026 0.636061C1.65974 0.245537 1.02657 0.245537 0.63605 0.636061C0.245526 1.02659 0.245526 1.65975 0.63605 2.05028L5.58577 7L0.636033 11.9497C0.245509 12.3403 0.245508 12.9734 0.636033 13.364C1.02656 13.7545 1.65972 13.7545 2.05025 13.364L6.99999 8.41421L11.9498 13.364C12.3403 13.7545 12.9734 13.7545 13.364 13.364C13.7545 12.9735 13.7545 12.3403 13.364 11.9498L8.4142 7L13.364 2.05025Z\"\n              fill=\"#1C1C21\"\n            />\n          </svg>\n        </div>\n        <div className=\"mainGameBoard\">\n          <div className=\"mainGameQuestionsBlock\">\n            <h2 key={currentQuestion.id} className=\"mainGameQuestion\">\n              {currentQuestion.question}\n            </h2>\n          </div>\n          <div className={`mainGameAnswers ${disabledBtns}`}>\n            {currentAnswers.map((answer, i) => (\n              <Answers\n                key={i}\n                letter={alphabet[i]}\n                answer={answer}\n                currentAnswer={currentAnswer}\n                disableButtons={disableButtons}\n                onSelect={checkAnswer}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={`mainGameScoreContainer ${mobileMenu}`}>\n          <div className=\"mainGameScoreWrap\">\n            {round.map((round, i) => (\n              <Rounds\n                key={i}\n                round={round}\n                currentIndex={roundIndex}\n                indexRound={i}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <FinishPage score={round[roundIndex - 1]} />;\n}\n\nexport default MainPage;\n","import { useState } from 'react';\nimport handPicture from '../../images/hand.svg';\nimport MainPage from '../MainPage/MainPage';\nimport './StartPage.css';\n\nfunction StartPage() {\n  const [start, setStart] = useState(false);\n  if (start === false) {\n    return (\n      <div className=\"startGameWrapper\">\n        <img alt=\"hand up\" className=\"startGameImg\" src={handPicture} />\n        <div className=\"startGameLogic\">\n          <h1 className=\"startGameTitle\">Who wants to be a millionaire?</h1>\n          <div onClick={() => setStart(true)} className=\"startGameButton\">\n            Start\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return <MainPage />;\n}\nexport default StartPage;\n","import StartPage from './pages/StartPage/StartPage';\n\nconst App = () => {\n  return (\n    <>\n      <StartPage />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}